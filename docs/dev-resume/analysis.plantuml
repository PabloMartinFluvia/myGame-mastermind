@startuml analysis

class Mastermind{  

    + initMastermind()
    + play()    
}
Mastermind *--> Game
Mastermind *--> YesNoDialog

class Game{
    - MAX_ATTEMPTS

    + initGame()
    + play()      
}
Game *--> SecretCombination
Game *--> "0..10" ProposedCombination
Game .down.> Result

class SecretCombination{
    
    + initSecretCombination()    
    + getResult(proposed)
    + show()    

}
SecretCombination *-down-> Combination
SecretCombination .down.> ProposedCombination
SecretCombination .down.> Result
SecretCombination .down.> ValidationResult

class Combination{
    - VALID_LENGTH
    - VALID_COLORS    
    - colors

    + initCombination(colors)
    + validColorsToString()
    + getRandomValidColor()    
    + addColor(color)
    + containsColor(searched)      
    + getColor(index)
    + getLength()          
    + getValidationResult()
    + show()
}
Combination .down.> ValidationResult

enum ValidationResult{
    OK
    INVALID_LENGTH
    INVALID_COLORS
    REPEATED_COLORS
}

class ProposedCombination{

    + initProposedCombination()
    + ask()   
    + getCombination()  
    + show() 
}
ProposedCombination *-down-> Combination 
ProposedCombination .down.> ValidationResult

class Result{
    - combinationLength
    - blacks
    - whites

    + initResult(combinationLength, blacks, whites)
    + isWinner()
    + show()    
}

class YesNoDialog {
    - YES
    - NO
    - question
    - answer    

    + initYesNoDialog(question)
    + ask()
    + isAffirmative()
}
@enduml